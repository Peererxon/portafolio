{"version":3,"sources":["resume/components/Heading.jsx","resume/containers/Sections.jsx","resume/components/SectionTitle.jsx","resume/components/SectionBody.jsx","resume/components/SectionBodyList.jsx","resume/components/SkillItem.jsx","resume/containers/SkillsContainer.jsx","resume/containers/Resume.jsx"],"names":["Heading","className","Sections","children","SectionTitle","memo","title","body","SectionBody","elemento","titulos","map","titulo","indice","style","margin","key","contenido","SectionBodyList","elementos","index","SkillItem","awesomeIcon","svgColor","name","icon","size","color","SkillsContainer","skills","t","useTranslation","split","skill","svgFontAwesome","console","log","toLocaleLowerCase","faReact","faJs","faDocker","faCodeBranch","faBootstrap","faAngular","faHtml5","faCss3Alt","faSass","faAndroid","Resume","cargarSecciones","direccionI18n","pop","trim","secciones","habilidades","platziEscuelaJS","platziArquitectura","cadif1FrontEnd","binauralExperience","foundussExperience","foundussApp","caprofulaWeb","habilidadesIndex","findIndex","element","experienciaLaboralIndex","estudiosIndex","proyectosDestacadosIndex","contenidos","group","table","groupEnd","undefined"],"mappings":"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","file":"static/js/5.ea9f5deb.chunk.js","sourcesContent":["import React from 'react';\nimport './styles/Heading.scss';\n\nexport const Heading = () => (\n    <div className = \"Heading\">\n        <section>\n\n            <div className = \"encabezado\">\n                <h2 className = \"encabezado__title\" > Resumen de Anderson </h2>\n            </div>\n            \n            <p className = \"Heading__p\"> Mejorar mis habilidades de Desarrollo a trav√©s de la experiencia laboral en equipo.</p>\n        </section>\n    </div>\n);\n\n","import React from 'react';\n\nexport const Sections = ( {children} ) => {\n    return (\n        <div className =\"container\">\n            <div className=\"row\">\n                {children}\n\n            </div>\n        </div>\n    )\n}","import React, { memo } from 'react'\nimport './styles/SectionTitle.scss';\n\n//memo solo funciona para comparar props\nexport const SectionTitle = memo( ( { title,body } ) => \n    (\n    <div className =\"SectionItem\" >\n\n        <div className=\"col s12 m6\">\n            <div className=\"sectionTitle\">\n                <div>\n                    <h2 className =\"sectionTitle__h2\">{title}</h2>\n                </div>\n            </div>\n            {body}\n        </div>\n    </div>\n    \n    )\n);//End memo","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nconst SectionBody = ({elemento}) => {\n    return (\n        <div className=\"sectionbody\">\n            <ul>    \n                {elemento.titulos.map( ( titulo,indice ) => <li style = { { margin:'10px 0px' } } key= {indice}> {titulo}</li>)}\n                <li>\n                    {elemento.contenido}\n\n                </li>\n            </ul>\n        </div>\n\n    )\n}\n\nSectionBody.propTypes = {\nelemento: PropTypes.shape( { titulos:PropTypes.array,contenido: PropTypes.string} )\n}\n\nexport default SectionBody","import React,{ memo } from 'react'\nimport './styles/SectionBody.scss';\n\nconst SectionBodyList = memo( ( { elementos } ) => \n    (\n        \n        <div className=\"sectionbody\">\n            <ul>\n                { \n                    elementos.map( (elemento,index) => \n                        (\n                            <li key= {index}>{elemento}</li>\n                        )\n                    ) \n                }\n                \n            </ul>\n        </div>\n    )\n)\n\nexport default SectionBodyList","import React, { memo } from 'react'\nimport './styles/SkillItem.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// this component need to use fontAwesome for react and materialize to work fine\nconst SkillItem = memo(\n  ( { awesomeIcon, svgColor, name } ) => {\n    return (\n      <div className={`col s4 m3`}>\n\n        <div className=\"skill\">\n          <FontAwesomeIcon className=\"skill__img\" icon={awesomeIcon} size=\"5x\" color={svgColor ? svgColor : \"black\"} />\n          <p className=\"skill__p\">{name}</p>\n        </div>\n\n      </div>\n\n    )\n  }\n)\nexport default SkillItem;\n","import React from 'react'\nimport { useTranslation } from 'react-i18next';\nimport './styles/SkillsContainer.scss';\nimport SkillItem from '../components/SkillItem';\n\nimport { faCodeBranch } from '@fortawesome/free-solid-svg-icons';\nimport\n{\n  faReact,\n  faAngular,\n  faAndroid,\n  faJs,\n  faBootstrap,\n  faDocker,\n  faSass,\n  faHtml5,\n  faCss3Alt\n} from '@fortawesome/free-brands-svg-icons';\n\nconst SkillsContainer = () => {\n  const { t } = useTranslation();\n  const skills = t( \"resume:skills\" ).split( ',' );\n  return (\n    <section className = \"container skills\">\n      <div className = \"Heading\">\n\n        <div className = \"encabezado encabezado--full\">\n          <h2 className = \"encabezado__title\" > Skills</h2>\n        </div>\n      </div>\n      <div className=\"skills-wrap\">\n        <div className=\"row\">\n\n          {\n            skills.map(\n              ( skill, index )=> {\n                // eslint-disable-next-line no-unused-vars\n                let svgFontAwesome;\n                // eslint-disable-next-line no-unused-vars\n                let svgColor;\n                console.log( skill )\n                switch ( skill.toLocaleLowerCase() ) {\n                  case \"react\":\n                    svgFontAwesome = faReact\n                    svgColor = \"#61dbfb\"\n                    break;\n\n                  case \"javascript\":\n                    svgFontAwesome = faJs\n                    svgColor = \"#f0db4f\"\n                    break;\n\n                  case \"docker\":\n                    svgFontAwesome = faDocker;\n                    svgColor = \"#0DB7ED\"\n                    break;\n\n                  case \"git\":\n                    svgFontAwesome = faCodeBranch;\n                    svgColor = \"#F1502F\"\n                    break;\n\n                  case \"boostrap\":\n                    svgFontAwesome = faBootstrap;\n                    svgColor = \"#563d7c\"\n                    break;\n\n                  case \"angular\":\n                    svgFontAwesome = faAngular\n                    svgColor = \"#a6120d\"\n                    break;\n\n                  case \"html\":\n                    svgFontAwesome = faHtml5\n                    svgColor = \"#f06529\"\n                    break;\n\n                  case \"css\":\n                    svgFontAwesome = faCss3Alt\n                    svgColor = \"#2965f1\"\n                    break;\n\n                  case \"sass\":\n                    svgFontAwesome = faSass\n                    svgColor = \"#cc6699\"\n                    break;\n\n                  case \"android\":\n                    svgFontAwesome = faAndroid\n                    svgColor = \"#32DE84\"\n                    skill = \"Aprendiendo\";\n                    break;\n\n                  default:\n                    break;\n                }\n\n                return <SkillItem name={skill} key = {index} awesomeIcon={svgFontAwesome} svgColor= {svgColor} />\n              }\n            )\n          }\n        </div>\n\n      </div>\n    </section>\n  )\n}\n\nexport default SkillsContainer;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport './styles/Resume.scss';\nimport { Heading } from '../components/Heading';\nimport { Sections } from './Sections';\nimport { SectionTitle } from '../components/SectionTitle';\nimport SectionBody from '../components/SectionBody';\nimport SectionBodyList from '../components/SectionBodyList';\nimport SkillsContainer from './SkillsContainer';\n\nconst Resume = () => {\n    /**\n     * @author Peererxon\n     * @param { string }  direccionI18n patch of the text in index.json for i18n\n     * @returns un objeto con la estructura { titulo:[],contenido:string }\n     */\n    const cargarSecciones = (direccionI18n) => {\n        const titulos = t(direccionI18n).split('.')\n        const contenido = titulos.pop().trim();\n        return { titulos,contenido }\n    }\n\n    //tomo los elementos desde la traduccion de i18n en el archivo json\n    const {t} = useTranslation();\n    let secciones = []\n    const titulos = t(\"resume:secciones:titulos\").split(\",\");\n    const habilidades = t(\"resume:secciones:habilidades\").split(\",\");\n\n    ////////////////////////////////////////////////////////  CARRERAS //////////////////////////////////////////////////////\n    const platziEscuelaJS = cargarSecciones(\"resume:estudios:platziEscuelaJS\");\n    const platziArquitectura = cargarSecciones(\"resume:estudios:platziArquitectura\");\n    const cadif1FrontEnd = cargarSecciones(\"resume:estudios:cadif1\");\n\n    //////////////////////////////////////////////////////// END CARRERAS /////////////////////////////////////////////////////\n    \n    ////////////////////////////////////////////////////////Work Experience //////////////////////////////////////////////////////\n    const binauralExperience = cargarSecciones(\"resume:experiencia:Binaural\");\n    const foundussExperience = cargarSecciones(\"resume:experiencia:Founduss\");\n    \n    ////////////////////////////////////////////////////// END WORK EXPERIENCE //////////////////////////////////////////////////////\n    const foundussApp = cargarSecciones(\"resume:proyectos:1\");\n    const caprofulaWeb = cargarSecciones(\"resume:proyectos:2\");\n    ////////////////////////////////////////////////////////  PROYECTOS //////////////////////////////////////////////////////\n\n    //////////////////////////////////////////////////////     CARGANDO SECCIONES //////////////////////////////////////////////////////\n    //i fill the array with the titles adding for each object the property  titulo\n    titulos.map( (titulo,index) => secciones[index]= {...secciones[index],titulo} )\n\n    //got te index of the array to fill it by him content (if i change the order in the near future it wont be broken :) )\n    const habilidadesIndex = secciones.findIndex( element => element.titulo.trim()  === \"Habilidades\" )\n    const experienciaLaboralIndex =  secciones.findIndex( element => element.titulo.trim()  === \"Experiencia Laboral\" )\n    const estudiosIndex =secciones.findIndex( element => element.titulo.trim()  === \"Estudios Profesionales\" )\n    const proyectosDestacadosIndex = secciones.findIndex( element => element.titulo.trim()  === \"Proyectos m√°s destacados\" )    \n\n    secciones[estudiosIndex].contenidos = [platziEscuelaJS,cadif1FrontEnd,platziArquitectura]\n    secciones[habilidadesIndex].contenidos = [...habilidades]\n    secciones[experienciaLaboralIndex].contenidos = [binauralExperience,foundussExperience]\n    secciones[proyectosDestacadosIndex].contenidos = [foundussApp,caprofulaWeb]\n    //////////////////////////////////////////////////////// END CARGANDO SECCIONES //////////////////////////////////////////////////////\n    console.group(\"secciones:\")\n        console.table(secciones)\n    console.groupEnd()\n    return (\n        <div className = \"Resume\">\n            <Heading />\n            <Sections >\n                {secciones.map( ({titulo,contenidos},index) => {\n                    \n                    if(contenidos != undefined)\n                    {\n                        if( titulo === \"Habilidades\")\n                            //si es iterable\n                        {\n                            return <SectionTitle key={index} title={titulo} body= {<SectionBodyList elementos={contenidos}/>} /> \n\n                        }\n                        else\n                        {//es un objeto\n                            const elementos = contenidos.map( (elemento,index) => <SectionBody  key= { index } elemento={elemento}/> )\n                            return <SectionTitle key={index} title={titulo}  body= {elementos} /> \n                        }\n                    }\n                    else\n                    {\n                        return <SectionTitle key={index} title={titulo} body= {<SectionBodyList elementos={[]}/>} /> \n                    }\n                    \n                }\n                    \n                )}\n            </Sections>\n            <SkillsContainer />\n        </div>\n        \n        \n    )\n}\n\nexport default Resume;"],"sourceRoot":""}