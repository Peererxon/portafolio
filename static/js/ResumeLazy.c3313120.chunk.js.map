{"version":3,"sources":["resume/components/Heading.jsx","resume/containers/Sections.jsx","resume/components/SectionTitle.jsx","resume/components/SectionBody.jsx","resume/components/SectionBodyList.jsx","resume/components/SkillItem.jsx","resume/containers/SkillsContainer.jsx","resume/containers/Resume.jsx"],"names":["Heading","title","body","className","Sections","children","SectionTitle","memo","SectionBody","elemento","titulos","map","titulo","indice","style","margin","key","contenido","SectionBodyList","elementos","index","SkillItem","awesomeIcon","svgColor","name","icon","size","color","SkillsContainer","skills","t","useTranslation","split","skill","svgFontAwesome","console","log","toLocaleLowerCase","faReact","faJs","faDocker","faCodeBranch","faBootstrap","faAngular","faHtml5","faCss3Alt","faSass","faAndroid","Resume","cargarSecciones","direccionI18n","pop","trim","secciones","habilidades","platziEscuelaJS","platziArquitectura","cadif1FrontEnd","binauralExperience","foundussExperience","foundussApp","caprofulaWeb","habilidadesIndex","findIndex","experienciaLaboralIndex","estudiosIndex","proyectosDestacadosIndex","contenidos","group","table","groupEnd","undefined"],"mappings":"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","file":"static/js/ResumeLazy.c3313120.chunk.js","sourcesContent":["import React from 'react';\nimport './styles/Heading.scss';\n\nexport const Heading = ( { title, body } ) => (\n  <div className = \"Heading\">\n    <section>\n\n      <div className = \"encabezado\">\n        <h2 className = \"encabezado__title\" > {title} </h2>\n      </div>\n\n      <p className = \"Heading__p\"> {body}</p>\n    </section>\n  </div>\n);\n\n","import React from 'react';\n\n// eslint-disable-next-line brace-style\nexport const Sections = ( { children } ) => {\n  return (\n    <div className =\"container\">\n      <div className=\"row\">\n        {children}\n\n      </div>\n    </div>\n  )\n}\n","import React, { memo } from 'react'\nimport './styles/SectionTitle.scss';\n\n//memo solo funciona para comparar props\nexport const SectionTitle = memo( ( { title, body } ) =>\n  (\n    <div className =\"SectionItem\" >\n\n      <div className=\"col s12 m6\">\n        <div className=\"sectionTitle\">\n          <div>\n            <h2 className =\"sectionTitle__h2\">{title}</h2>\n          </div>\n        </div>\n        {body}\n      </div>\n    </div>\n\n  )\n);//End memo\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nconst SectionBody = ( { elemento } ) => {\n  return (\n    <div className=\"sectionbody\">\n      <ul>\n        {elemento.titulos.map( ( titulo, indice ) => <li style = {{ margin: '10px 0px' }} key= {indice}> {titulo}</li> )}\n        <li>\n          {elemento.contenido}\n\n        </li>\n      </ul>\n    </div>\n\n  )\n}\n\nSectionBody.propTypes = {\n  elemento: PropTypes.shape( { titulos: PropTypes.array, contenido: PropTypes.string } )\n}\n\nexport default SectionBody;\n","import React, { memo } from 'react'\nimport './styles/SectionBody.scss';\n\nconst SectionBodyList = memo( ( { elementos } ) =>\n  (\n\n    <div className=\"sectionbody\">\n      <ul>\n        {\n          elementos.map( ( elemento, index ) =>\n            (\n              <li key= {index}>{elemento}</li>\n            )\n          )\n        }\n\n      </ul>\n    </div>\n  )\n)\n\nexport default SectionBodyList;\n","import React, { memo } from 'react'\nimport './styles/SkillItem.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// this component need to use fontAwesome for react and materialize to work fine\nconst SkillItem = memo(\n  ( { awesomeIcon, svgColor, name } ) => {\n    return (\n      <div className={`col s4 m3`}>\n\n        <div className=\"skill\">\n          <FontAwesomeIcon className=\"skill__img\" icon={awesomeIcon} size=\"5x\" color={svgColor ? svgColor : \"black\"} />\n          <p className=\"skill__p\">{name}</p>\n        </div>\n\n      </div>\n\n    )\n  }\n)\nexport default SkillItem;\n","import React from 'react'\nimport { useTranslation } from 'react-i18next';\nimport './styles/SkillsContainer.scss';\nimport SkillItem from '../components/SkillItem';\n\nimport { faCodeBranch } from '@fortawesome/free-solid-svg-icons';\nimport\n{\n  faReact,\n  faAngular,\n  faAndroid,\n  faJs,\n  faBootstrap,\n  faDocker,\n  faSass,\n  faHtml5,\n  faCss3Alt\n} from '@fortawesome/free-brands-svg-icons';\n\n// eslint-disable-next-line brace-style\nconst SkillsContainer = () => {\n  const { t } = useTranslation();\n  const skills = t( \"resume:skills\" ).split( ',' );\n  return (\n    <section className = \"container skills\">\n      <div className = \"Heading\">\n\n        <div className = \"encabezado encabezado--full\">\n          <h2 className = \"encabezado__title\" > Skills</h2>\n        </div>\n      </div>\n      <div className=\"skills-wrap\">\n        <div className=\"row\">\n\n          {\n            skills.map(\n              ( skill, index )=>\n              {\n\n                // eslint-disable-next-line no-unused-vars\n                let svgFontAwesome;\n                // eslint-disable-next-line no-unused-vars\n                let svgColor;\n                console.log( skill )\n                switch ( skill.toLocaleLowerCase() )\n                {\n                  case \"react\":\n                    svgFontAwesome = faReact\n                    svgColor = \"#61dbfb\"\n                    break;\n\n                  case \"javascript\":\n                    svgFontAwesome = faJs\n                    svgColor = \"#f0db4f\"\n                    break;\n\n                  case \"docker\":\n                    svgFontAwesome = faDocker;\n                    svgColor = \"#0DB7ED\"\n                    break;\n\n                  case \"git\":\n                    svgFontAwesome = faCodeBranch;\n                    svgColor = \"#F1502F\"\n                    break;\n\n                  case \"boostrap\":\n                    svgFontAwesome = faBootstrap;\n                    svgColor = \"#563d7c\"\n                    break;\n\n                  case \"angular\":\n                    svgFontAwesome = faAngular\n                    svgColor = \"#a6120d\"\n                    break;\n\n                  case \"html\":\n                    svgFontAwesome = faHtml5\n                    svgColor = \"#f06529\"\n                    break;\n\n                  case \"css\":\n                    svgFontAwesome = faCss3Alt\n                    svgColor = \"#2965f1\"\n                    break;\n\n                  case \"sass\":\n                    svgFontAwesome = faSass\n                    svgColor = \"#cc6699\"\n                    break;\n\n                  case \"android\":\n                    svgFontAwesome = faAndroid\n                    svgColor = \"#32DE84\"\n                    skill = \"Aprendiendo\";\n                    break;\n\n                  default:\n                    break;\n                }\n\n                return <SkillItem name={skill} key = {index} awesomeIcon={svgFontAwesome} svgColor= {svgColor} />\n              }\n            )\n          }\n        </div>\n\n      </div>\n    </section>\n  )\n}\n\nexport default SkillsContainer;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport './styles/Resume.scss';\nimport { Heading } from '../components/Heading';\nimport { Sections } from './Sections';\nimport { SectionTitle } from '../components/SectionTitle';\nimport SectionBody from '../components/SectionBody';\nimport SectionBodyList from '../components/SectionBodyList';\nimport SkillsContainer from './SkillsContainer';\n\n// eslint-disable-next-line brace-style\nconst Resume = () => {\n  /**\n     * @author Peererxon\n     * @param { string }  direccionI18n patch of the text in index.json for i18n\n     * @returns un objeto con la estructura { titulo:[],contenido:string }\n     */\n  const cargarSecciones = ( direccionI18n ) =>\n  {\n    const titulos = t( direccionI18n ).split( '.' )\n    const contenido = titulos.pop().trim();\n    return { titulos, contenido }\n  }\n\n  //tomo los elementos desde la traduccion de i18n en el archivo json\n  const { t } = useTranslation();\n  const secciones = []\n  const titulos = t( \"resume:secciones:titulos\" ).split( \",\" );\n  const habilidades = t( \"resume:secciones:habilidades\" ).split( \",\" );\n\n  ////////////////////////////////////////////////////////  CARRERAS //////////////////////////////////////////////////////\n  const platziEscuelaJS = cargarSecciones( \"resume:estudios:platziEscuelaJS\" );\n  const platziArquitectura = cargarSecciones( \"resume:estudios:platziArquitectura\" );\n  const cadif1FrontEnd = cargarSecciones( \"resume:estudios:cadif1\" );\n\n  //////////////////////////////////////////////////////// END CARRERAS /////////////////////////////////////////////////////\n\n  ////////////////////////////////////////////////////////Work Experience //////////////////////////////////////////////////////\n  const binauralExperience = cargarSecciones( \"resume:experiencia:Binaural\" );\n  const foundussExperience = cargarSecciones( \"resume:experiencia:Founduss\" );\n\n  ////////////////////////////////////////////////////// END WORK EXPERIENCE //////////////////////////////////////////////////////\n  const foundussApp = cargarSecciones( \"resume:proyectos:1\" );\n  const caprofulaWeb = cargarSecciones( \"resume:proyectos:2\" );\n  ////////////////////////////////////////////////////////  PROYECTOS //////////////////////////////////////////////////////\n\n  //////////////////////////////////////////////////////     CARGANDO SECCIONES //////////////////////////////////////////////////////\n  //i fill the array with the titles adding for each object the property  titulo\n  titulos.map( ( titulo, index ) => secciones[index] = { ...secciones[index], titulo } )\n\n  //got te index of the array to fill it by him content (if i change the order in the near future it wont be broken :) )\n  const habilidadesIndex = secciones.findIndex( ( { titulo } ) => ( titulo.trim() === \"Habilidades\" ) || ( titulo.trim() === \"Skills\" ) )\n  const experienciaLaboralIndex = secciones.findIndex( ( { titulo } ) => ( titulo.trim() === \"Experiencia Laboral\" ) || ( titulo.trim() === \"Professional Experience\" ) )\n  const estudiosIndex = secciones.findIndex( ( { titulo } ) => ( titulo.trim() === \"Estudios Profesionales\" ) || ( titulo.trim() === \"Professional studies\" ) )\n  const proyectosDestacadosIndex = secciones.findIndex( ( { titulo } ) => ( titulo.trim() === \"Proyectos más destacados\" ) || ( titulo.trim() === \"Featured projects\" ) )\n\n  secciones[estudiosIndex].contenidos = [platziEscuelaJS, cadif1FrontEnd, platziArquitectura]\n  secciones[habilidadesIndex].contenidos = [...habilidades]\n  secciones[experienciaLaboralIndex].contenidos = [binauralExperience, foundussExperience]\n  secciones[proyectosDestacadosIndex].contenidos = [foundussApp, caprofulaWeb]\n  //////////////////////////////////////////////////////// END CARGANDO SECCIONES //////////////////////////////////////////////////////\n  console.group( \"secciones:\" )\n  console.table( secciones )\n  console.groupEnd()\n  return (\n    <div className = \"Resume\">\n      <Heading title={t( \"resume:title\" )} body={t( \"resume:aspiracion\" )}/>\n      <Sections >\n        {secciones.map( ( { titulo, contenidos }, index ) =>\n        {\n\n          if ( contenidos !== undefined )\n          {\n            if ( habilidadesIndex === index )\n            //si es iterable, (esto solo ocurre en la sección de habilidades de momento)\n            {\n              return <SectionTitle key={index} title={titulo} body= {<SectionBodyList elementos={contenidos}/>} />\n            }\n            else\n            {//es un objeto\n              const elementos = contenidos.map( ( elemento, index ) => <SectionBody key= { index } elemento={elemento}/> )\n              return <SectionTitle key={index} title={titulo} body= {elementos} />\n            }\n          }\n          else\n          {\n            return <SectionTitle key={index} title={titulo} body= {<SectionBodyList elementos={[]}/>} />\n          }\n\n        }\n\n        )}\n      </Sections>\n      <SkillsContainer />\n    </div>\n\n\n  )\n}\n\nexport default Resume;"],"sourceRoot":""}